#version 450

#include "nezha.glsl"

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

// When this shader is called, this buffer will have data.
// Declare buffer a.
layout (set = 0, binding = 0) buffer input_a {
	float data[];
} in_buffer_a;

// When this shader is called, this buffer will have data.
// Declare buffer b.
layout (set = 1, binding = 0) buffer input_b {
	float data[];
} in_buffer_b;

// Declare output buffer.
layout (set = 2, binding = 0) buffer out_vec {
	float data[];
} out_buffer;

void main ()
{
	uint i = gl_GlobalInvocationID.x;
	out_buffer.data[i] = in_buffer_a.data[i] + in_buffer_b.data[i];
}
